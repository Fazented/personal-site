---
import { getCollection } from 'astro:content';

// Layout import â€” provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from '../layouts/BaseLayout.astro';

// Component Imports
import CallToAction from '../components/CallToAction.astro';
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import Icon from '../components/Icon.astro';
import Pill from '../components/Pill.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';

// Page section components
import ContactCTA from '../components/ContactCTA.astro';
import Skills from '../components/Skills.astro';

// Content Fetching: List four most recent work projects
const projects = (await getCollection('work'))
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
	.slice(0, 4);

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<BaseLayout>
	<div class="light">
		<script>
			const sizes = [1,1,2,3,4];

			//get random position between 1 - 100;
			function randomPosition(min, max) {
			  return Math.floor(Math.random() * (max - min + 1)) + min;
			}

			const body = document.querySelector(".body");

			for (let i = 0; i < 300; i++) {
  				const top = randomPosition(1,100);
  				const left = randomPosition(1,100);
  				const random = Math.floor(Math.random() * sizes.length);
  				const randomSize = sizes[random];
  				const div = document.createElement('div');
  				div.style.position = 'absolute';
  				div.style.top = top +'%';
  				div.style.left = left + '%';
  				div.style.height = randomSize +'px';
  				div.style.width = randomSize +'px';
  				div.style.backgroundColor = "#FFFFFF";
  				div.style.borderRadius = '50%';
  				if (i <= 50) {
      				div.classList.add('star1');
  				}
  				if (i <= 100 && i > 50) {
      				div.classList.add('star2');
  				}
  				if (i <= 150 && i > 100) {
      				div.classList.add('star3');
  				}
  				if (i <= 200 && i > 150) {
      				div.classList.add('star4');
  				}
  				if (i <= 250 && i > 200) {
      				div.classList.add('star5');
  				}
  				if (i <= 300 && i > 250) {
      				div.classList.add('star6');
  				}
  				document.body.appendChild(div);
			}
		</script>

	<div class="stack gap-20 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<style> /* For some reason this css only works when up here, and I am too lazy to fix it */
				.hero {
				  display: flex;
				  flex-direction: column;
				  align-items: center;
				  text-align: center;
				}
			  
				.hero .title {
				  text-align: center;
				}
			  
				.hero .tagline {
				  text-align: center;
				}
			  
				.hero .roles {
				  display: flex;
				  flex-wrap: wrap;
				  justify-content: center;
				  margin-top: 20px; /* Adjust as needed */
				}
			  
				.hero .roles .Pill {
				  margin: 0 10px; /* Adjust as needed */
				}
			  </style>
			  
			  <header class="hero">
				<Hero
				  title="Hello, I'm Finn Masters"
				  tagline="And I'm a student who's passionate about programming, filmmaking, and Design."
				  align="center"
				>
				  <div class="roles">
					<Pill><Icon icon="code" size="1.33em" /> Developer</Pill>
					<Pill><Icon icon="camera" size="1.33em" /> Filmmaker</Pill>
					<Pill><Icon icon="student" size="1.33em" /> Student</Pill>
				  </div>
				</Hero>
			  </header>
			<Skills />
		</div>

		<main class="wrapper stack gap-20 lg:gap-48">
			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Selected Work</h3>
					<p>Take a look below at some of my featured work for clients from the past few years.</p>
				</header>

				<div class="gallery">
					<Grid variant="offset">
						{
							projects.map((project) => (
								<li>
									<PortfolioPreview project={project} />
								</li>
							))
						}
					</Grid>
				</div>

				<div class="cta">
					<CallToAction href="/work/">
						View All
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
				</div>
			</section>

			<section class="section with-background bg-variant">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Mentions</h3>
					<p>
						I have been fortunate enough to recieve praise for my work in several publications. Take
						a look below to learn more.
					</p>
				</header>

				<div class="gallery">
					<Grid variant="small">
						{
							['Medium', 'BuzzFeed', 'The Next Web', 'awwwards.', 'TechCrunch'].map((brand) => (
								<li class="mention-card">
									<p>{brand}</p>
								</li>
							))
						}
					</Grid>
				</div>
			</section>
		</main>

		<ContactCTA />
	</div>
	</div>
</BaseLayout>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		text-align: center;
	}

	.roles {
		display: none;
	}

	.hero img {
		aspect-ratio: 5 / 4;
		object-fit: cover;
		object-position: top;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

		.hero img {
			aspect-ratio: 3 / 4;
			border-radius: 4.5rem;
			object-fit: cover;
		}
	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}

	/* ====================================================== */

	.mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}
	$sky_color_dark: #1F2023;
	$sky_color_light: #424472;

	html {
    	background-image: linear-gradient($sky_color_dark, $sky_color_light);
	}

	body { /* remove this and the stars go ontop of everything */
   		height: 460vh;
   		width: 100vw;
   		overflow: hidden;
	}


	.star1 {
  		animation: 3s linear 1s infinite alternate twinkle;
	}

	.star2 {
  		animation: 4s linear 0s infinite alternate twinkle;
	}

	.star3 {
  		animation: 3.5s linear 0.5s infinite alternate twinkle;
	}

	.star4 {
		animation: 1.25s linear 1.5s infinite alternate twinkle;
		}

	.star5 {
  		animation: 4s linear 2s infinite alternate twinkle;
	}

	.star6 {
  		animation: 2.5s linear 1s infinite alternate twinkle;
	}

	@keyframes twinkle {
  		0% {
    		opacity: 1;
  		}
  		50% {
    		opacity: 0;
  		}
  		100% {
    		opacity: 1;
  		}
	}

</style>
